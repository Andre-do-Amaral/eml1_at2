stages:
  - build
  - test

variables:
  DOCKER_DRIVER: overlay2  # Para evitar problemas de filesystem
  DOCKER_TLS_CERTDIR: ""   # Desabilita TLS interno para Docker no GitLab Runner
  IMAGE_NAME: "${CI_REGISTRY_IMAGE:-registry.gitlab.com/default/repo}:${
    CI_COMMIT_REF_SLUG:-latest}"
# Outras configurações permanecem iguais...

cache:
  paths:
    - .cache/pip
    - .venv
    - ~/.cache/pypoetry
    - ~/.cache/pip

# Etapa para construir a imagem Docker
build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
  only:
    - merge_requests
    - master
    - release
    - /^feature\/.*$/

# Etapa para rodar os testes de unidade
unit_tests:
  stage: test
  image: python:3.12
  tags:
    - feature
  before_script:
    - pip install --upgrade pip
    - pip install poetry
    - poetry install --no-root
  script:
    - poetry run pytest tests/
  only:
    - /^feature\/.*$/

# Etapa para rodar o seu evaluate com o MLflow rodando
integration_test:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  tags:
    - docker
  script:
    - docker run --rm $IMAGE_NAME
  only:
    - release

# Etapa para não rodar nada na main se não precisar
skip_main:
  stage: test
  tags:
    - ci
  script:
    - echo "Nada é executado na main"
  only:
    - master


#PO FUNCIONA AI VAI 